---
dist: xenial
language: python
python: 3.7
# pre-commit hooks can use Docker, so we should go ahead and enable it
services: docker
env:
  global:
    # AWS_ACCESS_KEY_ID
    - secure: "c1wgUDKOLt+TmTYUA9ET5UTrx9dy2NvGxxEdFAqDmO/8hj4cDk5MrdG\
      z6A/r/GPFelzqfvDxBfZSTpduZXp2hkFVUQgTiCQYEWi3/mDouTAUPN5RTTlygYl\
      cOBevSNHcyADAQS9odSWclskE8ahPK6crIQZOnQCeXugh6V7a+43TX6z77l8ZTAo\
      8weZkOcvT7Qe3qXf5ppoBzVvTMD8HbyiPr+8EtPxaZSMT5kJhN/jVpOxB+1VaM94\
      He+L+rFgFy8s2kJ9E3oyg7oYx32DSBMY5slPSX3hYEsw0zoZB8NeLApEVLnKDEp2\
      fdiPlOUNcdSLwJRu4yb4VVy82NFvEr/ekHZaTyVPqSZi32Z5vGjusR8yiEnTAVBF\
      w87x+VomGjlhpGERB7n6BrZJ0GL1r3sxdaXIOxkhP2Uj2p/tPU8cNKN+OuPt6iRi\
      hxYWxn6m4Syvm6B5ZxBTv7V2kQoBWY/PqjXsVvBw1NG6tsMXVWNw6cG1wur9MIKA\
      rzko0SdRgz3NFFhrshaHkFW73Q3evZJJPWJGMWun/72z1anIgziPNtm5NR2Anxnt\
      WTRTXovc0834hUPwE+TzQ2uLJfUs6jNX9teIZjAkvgpmHS7vc8YVx+s10tdz3Aej\
      CvL0lAQJBOWcPT2C6Kvl4irF2PTXKg8LuI4VQp6E/JdEiE6gNfXE="
    - AWS_DEFAULT_REGION="us-east-1"
    # AWS_SECRET_ACCESS_KEY
    - secure: "Pwd11CJAvz8Bo36JFYylLk75rwcqZbo3XhfNtaQ2nILfXRsBbo6CGJi\
      UvoVblFF48L89pFVRdcN+pdWBHqQ/ku4t967RO3g3W53fV0EKOPfOtQ4zQYm5+Sc\
      4FauNp43rpvAGYe5O/tCtR8PQPYPLfK8Sb5Po5VEWfDc18Qbaw/k+XqOAHcMg2RL\
      R5ddaOb9IDEi09Ip6rHRMmwn/rSXg19ToGpPUVNkOVt2sWCWWYjqnjPKF7LuvdSl\
      bf1dwHNYtzfMxJkpDfYGYq6YLZoZvjMjcGH4eIgAU+qf56S8D7tslWjMnA7Hyewn\
      dH1XyS+dIKVGF6cCupnusUVfJjwevrL108TT60HAcfhHDhWZKMTyrgmrDGEKFqx8\
      kGD0Yv8NIJCXVzkKyMkVqaHvNuR6YIxsdFOf3CTnX+SObrXTlh7mN5yngLEpTxDl\
      jnKIRk46PDT4ux3P0lfEfUwkcJQEImqbnQoMn+ADfPbseAB7/pcyf59Z6VebEb/t\
      z2Iwfr5SGAyQloUYKcSq1zTQ4qMBwlmVVyMa5g4/DHWXyBnR0caInV0vfasfjAld\
      cu6sz7HqDaySgrmCd9sYYhsrP9cm6bpSgDuM2iEqAORfn1JRWVhZyYaUc6RRrTnO\
      EhhR3zRIrp/qmDstgDO6VybTJ5Z5opu1evmVc+OyD+Nnh0ZpIq1U="
    # GITHUB_ACCESS_TOKEN
    - secure: "CMVLqC2AYZ78mEn8w1GWv3p7Ci5lProngCei/Fzin0KCYrsV+DEBQCm\
    6nKvv/wmEKIy79BpdF2GNwz23uiJXE8VF9A3WBM82coF5KfCO1CporqsQ25cLYSwCF\
    j8AxsT4n5JXHtXVsuNk0QETspZcDBjfOtdIS0p/YYArkpBS69NFJg4d7STcCPnIgRX\
    /06ksN9WRbliiiQ70gdkZpZE5ceqMH3mRiUFFKU9aTF2DnDDaYLVXbHqjtYL621HYa\
    /XywUQ6YZwFEbz8n4XwGqARILJOfz0FPJcKCOAnAnbGwY3ejef15lEMDZQuPzb7kPy\
    hhykpbNKY028781GyQxJrPMYx1AYOlAeP/vkFUGQvMXbOuEF6WLLv3CHsx1MX30EW3\
    bZL5FBgxwvg5v/PgFQNdh8Ma+e02D2p+AHWUCf3VhwHqdKovk3ebDRlF2geJYl8KP7\
    HiqSnKlITsvRxh+tZdvBR7rNv6+PjsjfR00hMI4KY45Z6eoLXcXz9icwT76Q1+Adnz\
    eMACE+Yb3HLdg4mfo6Ni3Fkdz+8ODw750crSsR1/TAGeFL8F+qp+1eqScMbz+vxoyv\
    yKDN3LCV3Sj6nmiE4d3UmjP/YKkQxD9cqCzBFMuUtJKgNajpbuy0WKdtkConb2wxSa\
    3bX4KmUdPpv1mLNg5ugcp+8PWT1/Bb0U2A="
    - PACKER_BUILD_REGION="us-east-2"
    - PACKER_DEPLOY_REGIONS="us-east-1,us-west-1,us-west-2"
    - CURL_CACHE_DIR="$HOME/.cache/curl"
    - PACKER_VERSION="1.4.2"
    - PACKER_ZIP="packer_${PACKER_VERSION}_linux_amd64.zip"
    - TERRAFORM_VERSION="0.12.3"
    - TERRAFORM_ZIP="terraform_${TERRAFORM_VERSION}_linux_amd64.zip"


# Cache pip packages, pre-commit plugins, and some curl downloads to
# speed up builds
cache:
  pip: true
  directories:
    - $HOME/.cache/pre-commit
    - $CURL_CACHE_DIR

before_install:
  # Make a cache directory for curl downloads
  - mkdir -p $CURL_CACHE_DIR
  # Install terraform
  - curl --output "${CURL_CACHE_DIR}/${TERRAFORM_ZIP}"
      --time-cond "${CURL_CACHE_DIR}/${TERRAFORM_ZIP}" --location
      "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/${TERRAFORM_ZIP}"
  - sudo unzip -d /opt/terraform "${CURL_CACHE_DIR}/${TERRAFORM_ZIP}"
  - sudo ln -s /opt/terraform/terraform /usr/bin/terraform
  # Install packer
  - curl --output "${CURL_CACHE_DIR}/${PACKER_ZIP}"
      --time-cond "${CURL_CACHE_DIR}/${PACKER_ZIP}" --location
      "https://releases.hashicorp.com/packer/${PACKER_VERSION}/${PACKER_ZIP}"
  - sudo unzip -o -d /usr/local/bin "${CURL_CACHE_DIR}/${PACKER_ZIP}"

install:
  - pip install --upgrade --requirement requirements-test.txt
  - export PACKER_IMAGE_VERSION=$(./bump_version.sh show)
  # Install roles
  - ansible-galaxy install --force --role-file src/requirements.yml

script:
  - eval $(./update_env.py)
  - pre-commit run --all-files
  - packer validate src/packer.json
  - pytest

deploy:
  # create an image
  - provider: script
    script: SHERPA_TIMEOUT=30
      ./sherpa.py packer build --timestamp-ui src/packer.json
    on:
      tags: true
